version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2
defaults: &defaults
  working_directory: ~/web
  docker:
    - image: circleci/ruby:2.5.3-browsers-legacy
      environment:
        RAILS_ENV: development
        PGHOST: 127.0.0.1
        PGUSER: root
    - image: circleci/postgres:9.6-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: sf_dahlia
  executor: ruby/default
aliases:
  - &attach_workspace
    attach_workspace:
      at: ~/web
  - &restore_npm_cache
    restore_cache:
        name: Restore NPM Cache
        keys:
          - web-{{ .Environment.CACHE_VERSION }}-npm-packages-{{ .Branch }}-{{ checksum "package-lock.json" }}
          - web-{{ .Environment.CACHE_VERSION }}-npm-packages-{{ .Branch }}
          - web-{{ .Environment.CACHE_VERSION }}-npm-packages-main
          - web-{{ .Environment.CACHE_VERSION }}-npm-packages-
  - &restore_bundler_cache
    restore_cache:
        name: Restore Bundler Cache
        keys:
          - web-{{ .Environment.CACHE_VERSION }}-dependencies-{{ checksum "Gemfile.lock" }}
          - web-{{ .Environment.CACHE_VERSION }}-dependencies-
commands:
  prepare_workspace:
    description: "Attach workspace and restore cache"
    steps:
      - *attach_workspace
      - *restore_npm_cache
      - *restore_bundler_cache
  install-node:
    description: "install node"
    steps:
      - run:
          command: |
            set +e
            touch $BASH_ENV
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            echo 'nvm install v6.11.1' >> $BASH_ENV
            echo 'nvm alias default v6.11.1' >> $BASH_ENV
      - run: npm install
  setup-webdriver:
    description: "Setup webdriver for e2e tests"
    steps:
      - run:
          command: |
            ./node_modules/protractor/bin/webdriver-manager clean
            ./node_modules/protractor/bin/webdriver-manager update --versions.chrome 2.41 --versions.standalone 3.141.59
            cat node_modules/protractor/node_modules/webdriver-manager/selenium/update-config.json
            sed -i 's/2\.45/2\.41/g' node_modules/protractor/node_modules/webdriver-manager/selenium/update-config.json
            cat node_modules/protractor/node_modules/webdriver-manager/selenium/update-config.json
            ./node_modules/protractor/bin/webdriver-manager status
  upgrade-bundler:
    description: Upgrade bundler
    steps:
      - run: gem update --system
      - run: gem install bundler
  setup:
    description: "Basic setup"
    steps:
      - checkout
      - prepare_workspace
      - install-node
      - upgrade-bundler
      - run: bundle --path vendor/bundle
      - run: bundle exec rails db:migrate
  start-server:
    description: "Start Rails server in background"
    steps:
      - setup-webdriver
      - run:
          name: Run rails server in background
          command: bundle exec rails server -p 3000
          background: true
      - run:
          name: Wait for server
          command: |
            until $(curl --retry 10 --output /dev/null --silent --head --fail http://127.0.0.1:3000); do
                printf '.'
                sleep 5
            done
  run-e2e-tests-for-path:
    description: Start a rails server and run specified e2e tests
    parameters:
      path:
        type: string
        default: "./spec/e2e/test-feature-path.feature"
    steps:
      - setup
      - start-server
      - run: npm run protractor -- --specs '<< parameters.path >>'

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - prepare_workspace
      - install-node
      - save_cache:
          name: Save Npm Package Cache
          key: npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules/
      - upgrade-bundler
      - run:
          name: Bundle install
          command: |
            sudo apt-get install pkg-config
            bundle config build.nokogiri --use-system-libraries
            bundle install --deployment --path vendor/bundle
      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/web/vendor/bundle
      - run: bundle exec rake db:setup
      - run: bundle exec rake db:test:prepare
      - run: bundle exec rake db:migrate
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
            ./tmp/cc-test-reporter before-build
      - setup-webdriver
      - persist_to_workspace:
          root: .
          paths:
            - .
  backend:
    <<: *defaults
    steps:
      - setup
      - run: RAILS_ENV=test bundle exec rails db:create
      - run: RAILS_ENV=test bundle exec rails db:test:prepare
      - run: bundle exec rake jasmine:ci
      - run: bundle exec rake spec
  e2e-submit-application:
    <<: *defaults
    steps:
      - run-e2e-tests-for-path:
          path: "./spec/e2e/features/short_form/submitting_application.feature"
  e2e-sign-in-apply:
    <<: *defaults
    steps:
      - run-e2e-tests-for-path:
          path: "./spec/e2e/features/short_form/sign_in_while_applying.feature"
  e2e-other-short-form:
    <<: *defaults
    steps:
      - run-e2e-tests-for-path:
          path: "./spec/e2e/features/short_form/!(submitting_application|sign_in_while_applying).feature"
workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - build
      - backend:
          requires:
            - build
      - e2e-submit-application:
          requires:
            - build
      - e2e-sign-in-apply:
          requires:
            - build
      - e2e-other-short-form:
          requires:
            - build